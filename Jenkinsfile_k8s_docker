#Note: you need to install docker pipeline, docker plugins to work with below script ###
### add global credentials for dockerhub credentials(username, password) ###


pipeline {
    environment {
    registry = "veerendradevops/gameoflife"
    registryCredential = 'dockerhub-cred'
    dockerImage = ''
  }
  parameters {
        choice(name: 'kubernetes', choices: 'deployment\nrollout\ndelete', description: 'Select kubernetes action')
    }
    agent any 
    stages {
        stage('git') {
             when {
                expression {
                    params.kubernetes == 'deployment'
                }
            }
            steps {
                git 'https://github.com/veerendradevops/game-of-life.git'
            }
        }
        stage('build') {
             when {
                expression {
                    params.kubernetes == 'deployment'
                }
            }
            steps {
                sh '/opt/maven/apache-maven-3.6.3/bin/mvn clean package'
            }
        }
        stage('Building image') {
             when {
                expression {
                    params.kubernetes == 'deployment'
                }
            }
      steps{
        script {
          dockerImage = docker.build registry
        }
      }
    }
        stage('pushingdockerimages') {
             when {
                expression {
                    params.kubernetes == 'deployment'
                }
            }
            steps {
               script {
                docker.withRegistry( '', registryCredential ) {
                                dockerImage.push()
                }
               }
            }
        }
        stage('k8s-deployment') {
            when {
                expression {
                    params.kubernetes == 'deployment'
                }
            }
            steps {
                sh 'kubectl apply -f kubernetes/deployment.yml'
            }
        }
        stage('k8s-rollout') {
            when {
                expression {
                    params.kubernetes == 'rollout'
                }
            }
            steps {
                sh 'kubectl rollout undo deployment/gameoflife-deploy'
            }
        }
        stage('k8s-delete') {
            when {
                expression {
                    params.kubernetes == 'delete'
                }
            }
            steps {
                sh 'kubectl delete deployment gameoflife-deploy'
                sh 'kubectl delete svc gameoflife'
            }
        }
    }
}